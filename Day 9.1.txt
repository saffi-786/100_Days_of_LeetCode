144. Binary Tree Preorder Traversal (Easy)

Given the root of a binary tree, return the preorder traversal of its nodes' values.

 

Example 1:


Input: root = [1,null,2,3]
Output: [1,2,3]

Code : 

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        ArrayList<Integer> a=new ArrayList<>();
        if(root==null) return a;

        Stack<TreeNode> s=new Stack<>();
        s.push(root);
        while(!s.isEmpty()){
            root=s.pop();
            a.add(root.val);
            if(root.right!=null)
            s.push(root.right);
            if(root.left!=null)
            s.push(root.left);
        }
        return a;
    }
}