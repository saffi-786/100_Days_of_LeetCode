226. Invert Binary Tree (Easy)

Given the root of a binary tree, invert the tree, and return its root.

 

Example 1:


Input: root = [4,2,7,1,3,6,9]
Output: [4,7,2,9,6,3,1]

Code :

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode invertTree(TreeNode root) {
        if(root==null || (root.left==null && root.right==null))
        return root;
        TreeNode ans=new TreeNode(root.val);

        solve(root,ans);
        return ans;
    }
    static void solve(TreeNode root,TreeNode ans){
        if(root==null)
        return;

        if(root.left!=null)
        ans.right=new TreeNode(root.left.val);

        solve(root.left,ans.right);

        if(root.right!=null)
        ans.left=new TreeNode(root.right.val);

        solve(root.right,ans.left);
    }
}