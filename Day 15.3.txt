1669. Merge In Between Linked Lists (Medium)

You are given two linked lists: list1 and list2 of sizes n and m respectively.

Remove list1's nodes from the ath node to the bth node, and put list2 in their place.

The blue edges and nodes in the following figure indicate the result:


Build the result list and return its head.

 

Example 1:


Input: list1 = [0,1,2,3,4,5], a = 3, b = 4, list2 = [1000000,1000001,1000002]
Output: [0,1,2,1000000,1000001,1000002,5]
Explanation: We remove the nodes 3 and 4 and put the entire list2 in their place. The blue edges and nodes in the above figure indicate the result.

Code :

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {
        ListNode prev=list1;
        ListNode curr=new ListNode(-1);
        ListNode ans=curr;
        int k=-1;
        while(prev!=null){
            k++;
            if(k<a || k>b){
                curr.next=new ListNode(prev.val);
                curr=curr.next;
            }
            else if(k==a){
                while(list2!=null)
                {
                    curr.next=new ListNode(list2.val);
                    curr=curr.next;
                    list2=list2.next;
                }
            }
            prev=prev.next;
        }
        return ans.next;
    }
}


----------------------------------------------------------------------------------------------------------
Alternate Code :

class Solution {
    public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {
        int i=0;
        ListNode t1=list1;
        ListNode t2=list1;
        while(i<a-1){
            i++;
            t1=t1.next;
        }
        i=0;
        while(i<b){
            i++;
            t2=t2.next;
        }
        t2=t2.next;
        ListNode last=list2;
        while(last.next!=null){
            last=last.next;
        }
        t1.next=list2;
        last.next=t2;
        return list1;
    }
}