21. Merge Two Sorted Lists (Easy)

You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

 

Example 1:


Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]

Code :

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if(list1==null)
        return list2;
        else if(list2==null)
        return list1;
        ListNode head=new ListNode();
        ListNode ptr=head;
        while(list1!=null && list2!=null){
            if(list1.val<=list2.val){
                head.val=list1.val;
                head.next=new ListNode();
                head=head.next;
                list1=list1.next;
            }
            else{
                head.val=list2.val;
                list2=list2.next;
                head.next=new ListNode();
                head=head.next;
            }
        }
        if(list2!=null){
            head.val=list2.val;
            head.next=list2.next;
        }
        if(list1!=null){
            head.val=list1.val;
            head.next=list1.next;
        }
        return ptr;
    }
}