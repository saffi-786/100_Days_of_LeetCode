876. Middle of the Linked List (Easy)

Given the head of a singly linked list, return the middle node of the linked list.

If there are two middle nodes, return the second middle node.

 

Example 1:


Input: head = [1,2,3,4,5]
Output: [3,4,5]
Explanation: The middle node of the list is node 3.

Code :

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
        int k=0;
        ListNode ptr=head;
        while(ptr!=null){
            k++;
            ptr=ptr.next;
        }
        int i=0;
        while(head!=null){
            if(++i==k/2+1)
            return head;
            head=head.next;
        }
        return head;
    }
}