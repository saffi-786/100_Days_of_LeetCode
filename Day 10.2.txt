101. Symmetric Tree (Easy)

Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).

 

Example 1:


Input: root = [1,2,2,3,4,4,3]
Output: true

Code :

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        return compute(root.left,root.right);
    }
    static boolean compute(TreeNode l,TreeNode r){
        if(l==null && r==null)
        return true;
        if((l!=null && r==null)||(l==null && r!=null))
        return false;
        if(l.val!=r.val)
        return false;

        return compute(l.left,r.right)&&compute(l.right,r.left);
    }
}