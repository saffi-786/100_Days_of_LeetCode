997. Find the Town Judge (Easy)

In a town, there are n people labeled from 1 to n. There is a rumor that one of these people is secretly the town judge.

If the town judge exists, then:

The town judge trusts nobody.
Everybody (except for the town judge) trusts the town judge.
There is exactly one person that satisfies properties 1 and 2.
You are given an array trust where trust[i] = [ai, bi] representing that the person labeled ai trusts the person labeled bi.

Return the label of the town judge if the town judge exists and can be identified, or return -1 otherwise.

 

Example 1:

Input: n = 2, trust = [[1,2]]
Output: 2

Code :

class Solution {
    public int findJudge(int n, int[][] trust) {
        if(n==1)
        return 1;
        HashMap<Integer,Integer> h=new HashMap<>();
        ArrayList<Integer> a=new ArrayList<>();
        for(int i=0;i<trust.length;i++){
            h.put(trust[i][1],1+h.getOrDefault(trust[i][1],0));
            a.add(trust[i][0]);
        }
        for(int i=1;i<=n;i++){
            if(!a.contains(i) && h.containsKey(i) && h.get(i)==n-1){
                return i;
            }
        }
        return -1;
    }
}