82. Remove Duplicates from Sorted List II (Medium)

Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. Return the linked list sorted as well.

 

Example 1:


Input: head = [1,2,3,3,4,4,5]
Output: [1,2,5]

Code :

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        ListNode ans=new ListNode(0);
        ListNode ptr1=ans;
        ListNode ptr=head;

        while(ptr!=null){
            if(ptr!=null && ptr.next!=null && ptr.val==ptr.next.val){
                while(ptr.val==ptr.next.val)
                ptr=ptr.next;
                ptr=ptr.next;
                continue;
            }
            ptr1.next=new ListNode(ptr.val);
            ptr1=ptr1.next;
            ptr=ptr.next;
        }

        return ans.next;
    }
}