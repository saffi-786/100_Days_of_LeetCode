290. Word Pattern (Easy)

Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.

 

Example 1:

Input: pattern = "abba", s = "dog cat cat dog"
Output: true
Example 2:

Input: pattern = "abba", s = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false
 

Constraints:

1 <= pattern.length <= 300
pattern contains only lower-case English letters.
1 <= s.length <= 3000
s contains only lowercase English letters and spaces ' '.
s does not contain any leading or trailing spaces.
All the words in s are separated by a single space.

My Code :

class Solution {
    public boolean wordPattern(String pattern, String s) {
        String st[]=s.split("\\s");
        if(st.length!=pattern.length())
        return false;

        HashSet<Character> h1=new HashSet<>();
        HashSet<String> h2=new HashSet<>();

        for(int i=0;i<pattern.length();i++){
            h1.add(pattern.charAt(i));
        }
        for(int i=0;i<st.length;i++){
            h2.add(st[i]);
        }

        if(h1.size()!=h2.size())
        return false;

        HashMap<Character,String> h=new HashMap<>();

        for(int i=0;i<pattern.length();i++){

            char c=pattern.charAt(i);
            String k="";
            if(h.get(c)==null){
                h.put(c,st[i]);
            }
            else if(h.get(c).equals(st[i])==false)
            return false;
        }

        return true;
    }
}

-----------------------------------------------------------------------------------
Better Code :

class Solution {
    public boolean wordPattern(String pattern, String s) {
        String [] arr = s.split(" ");
        if(pattern.length()!=arr.length)return false;
        HashMap<Character,String> map = new HashMap<>(); 
        for(int i = 0; i<pattern.length(); i++){
            char ch = pattern.charAt(i);
            boolean containsKey = map.containsKey(ch);
            if(map.containsValue(arr[i]) && !containsKey)return false;
            if(containsKey && !map.get(ch).equals(arr[i]))return false;
            else map.put(ch,arr[i]);
        }
        return true;
    }
}