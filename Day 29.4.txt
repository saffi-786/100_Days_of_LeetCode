86. Partition List (Medium)

Given the head of a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.

You should preserve the original relative order of the nodes in each of the two partitions.

 

Example 1:


Input: head = [1,4,3,2,5,2], x = 3
Output: [1,2,2,4,3,5]\

Code :

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        ListNode ans=new ListNode(0);
        ListNode ptr=ans;
        ListNode ans1=new ListNode(0);
        ListNode ptr1=ans1;
        while(head!=null){
            if(head.val<x)
            {
                ptr.next=new ListNode(head.val);
                ptr=ptr.next;
            }
            else{
                ptr1.next=new ListNode(head.val);
                ptr1=ptr1.next;
            }
            head=head.next;
        }
        ptr.next=ans1.next;
        return ans.next;
    }
}