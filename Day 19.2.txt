19. Remove Nth Node From End of List (Medium)

Given the head of a linked list, remove the nth node from the end of the list and return its head.

 

Example 1:


Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]

Code :

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head.next==null && n==1)
        return null;
        ListNode ptr=head;
        int k=0;
        while(ptr!=null){
            ptr=ptr.next;
            k++;
        }
        if(n==k){
            head=head.next;
            return head;
        }
        ptr=head;
        for(int i=0;i<k-n-1;i++){
            ptr=ptr.next;
        }
        if(k==1){
            ptr.next=null;
        }
        else{
            ptr.next=ptr.next.next;
        }
        return head;
    }
}